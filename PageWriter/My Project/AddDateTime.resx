<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaKZZ3mimWd5oplneaKZZ3mimWd5op
        lneaKZZ3mimWd5oplneaKZZ3mimWdwAAAAAAAAAAAAAAAAAAAAAAAAAAmimV/5oplIiaKZSImimUiJop
        lIiaKZSImimUiJoplIiaKZSImimUiJoplf8AAAAAAAAAAAAAAAAAAAAAAAAAAJoplf8AAAAAmSqVgAAA
        AACZKpWAAAAAAJkqlYAAAAAAmSqVgAAAAACaKZX/AAAAAAAAAAAAAAAAAAAAAAAAAACaKZX/AAAAAJkq
        lYAAAAAAmSqVgAAAAACZKpWAAAAAAJkqlYAAAAAAmimV/wAAAAAAAAAAAAAAAAAAAAAAAAAAmimV/5kp
        lGSZKZRkmCmYJQAAAAAAAAAAmSqVgAAAAACZKpWAAAAAAJoplf8AAAAAAAAAAAAAAAAAAAAAmymVhJkp
        le6aKZWdmimVnZopleabKZWCAAAAAJkqlYAAAAAAmSqVgAAAAACaKZX/AAAAAAAAAAAAAAAAmSiWX5op
        lMmWLZYRniaWIgAAAACWLZYRmymVy5oplF0AAAAAAAAAAAAAAAAAAAAAmimV/wAAAAAAAAAAAAAAAJsp
        lcuZK5U8myeTIZspleybKpY9AAAAAJgplD6aKZXZmimWd5oplneaKZZ3mimWd5oplf8AAAAAAAAAAAAA
        AACaKZXzlSuVDAAAAACaKpSGmSqVgAAAAACSJJIOmimV9poplIiaKZSImimUiJoplIiaKZX/AAAAAAAA
        AAAAAAAAmymVy5kqlDcAAAAAmSqVgJkqlYAAAAAAmCiUOZoolemaKZZ3mimWu5oplruaKZZ3mimV/wAA
        AAAAAAAAAAAAAJkoll+aKZXHli2WEZoplkSaKZZEli2WEZoplciaKZWcmimUiJoqlMSaKpTEmimUiJop
        lIgAAAAAAAAAAAAAAAAAAAAAmymVhJopleWaKZWdmimVnZopleabKZWCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaKJQmmSmUZJkplGSYKZglAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAOADAADqqwAA6qsAAO+rAADAqwAA3vsAALd7
        AACzAwAAs0sAAN4DAADA/wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJoplf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5op
        lf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5oplf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5op
        lf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaKZX/mimV/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJoplf+aKZX/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJoplf+aKZX/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmimV/5op
        lf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmimV/5oplf8AAAAAAAAAAJop
        lf+aKZX/AAAAAAAAAACaKZX/mimV/wAAAAAAAAAAmimV/5oplf8AAAAAAAAAAJoplf+aKZX/AAAAAAAA
        AACaKZX/mimV/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaKZX/mimV/wAA
        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
        AAAAAAAAAAAAAJsolZGaKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5op
        lf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZKJMtmimV/ZoplfebJ5YuAAAAAAAAAAAAAAAAmimV/5op
        lf8AAAAAAAAAAAAAAACaK5UwmimV+Joplf+aKZX/mimV/5oplf+aKZX/mimV/5oplf+aKZX/mimV/5op
        lf+aKZX/mimV/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaKZWamimV/5opleScKpcxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmSmUMpopleWaKZX/mymWlgAAAAAAAAAAAAAAAAAAAACaKZX/mimV/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJIkkgeaKZW6mimV/5op
        lPmaKZWXmCeTNJYtlhGWLZYRmiuVNZoolZiaKZX6mimV/5oplbmqK6oGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKor
        qgaaKZWVmimV/Zoplf+aKZX/mimV/5oplf+aKZX/mimV/5oplfyaKJSSmTOZBQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACcKZcsmimVjpopldSaKZXrmimV65kpldOaKZWOmiqUKwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////AAAD/wAAA/8///P/P//z/zM
        zM/8zMzP/P//z/z//8/8B8zP+AHMz/Dw/8/j/H/P5/5/z8c+P8/PHwAPz58AD8+fP8/PnznPx54AD+ee
        AA/j/Hn/8PD///gB///+B///////////////////
</value>
  </data>
</root>